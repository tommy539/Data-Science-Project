<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0321.1733                               -->
<workbook original-version='18.1' source-build='2019.1.2 (20191.19.0321.1733)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <repository-location id='Book2_15846327599530' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='GlobalLandTemperaturesByCountry' inline='true' name='federated.1b9bsu61972x6418vfov30r2xt57' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GlobalLandTemperaturesByCountry' name='textscan.0nzteg31it4v3f1ciybps1fsks4i'>
            <connection class='textscan' directory='/Users/Tommy/DS/World climate/data/climate-change-earth-surface-temperature-data' filename='GlobalLandTemperaturesByCountry.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0nzteg31it4v3f1ciybps1fsks4i' name='GlobalLandTemperaturesByCountry.csv' table='[GlobalLandTemperaturesByCountry#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='date' name='dt' ordinal='0' />
            <column datatype='real' name='AverageTemperature' ordinal='1' />
            <column datatype='real' name='AverageTemperatureUncertainty' ordinal='2' />
            <column datatype='string' name='Country' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt]</local-name>
            <parent-name>[GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperature]</local-name>
            <parent-name>[GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>AverageTemperature</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageTemperatureUncertainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageTemperatureUncertainty]</local-name>
            <parent-name>[GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>AverageTemperatureUncertainty</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[GlobalLandTemperaturesByCountry.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Max' datatype='real' name='[Average Temperature (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[AverageTemperature]' />
      </column>
      <column caption='Average Temperature Uncertainty' datatype='real' name='[AverageTemperatureUncertainty]' role='measure' type='quantitative' />
      <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/Tommy/Documents/My Tableau Repository/Datasources/GlobalLandTemperaturesByCountry.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/19/2020 03:44:08 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='GlobalLandTemperaturesByCountry' increment-value='%null%' refresh-type='create' rows-inserted='577462' timestamp-start='2020-03-19 15:44:08.558' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>0</ordinal>
              <family>GlobalLandTemperaturesByCountry.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15898</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AverageTemperature</remote-alias>
              <ordinal>1</ordinal>
              <family>GlobalLandTemperaturesByCountry.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>122110</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageTemperatureUncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageTemperatureUncertainty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AverageTemperatureUncertainty</remote-alias>
              <ordinal>2</ordinal>
              <family>GlobalLandTemperaturesByCountry.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12540</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>3</ordinal>
              <family>GlobalLandTemperaturesByCountry.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>243</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.445019' measure-ordering='alphabetic' measure-percentage='0.554981' show-hidden-fields='true' show-structure='true' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='carbon-dioxide' inline='true' name='federated.0hzudmc1yprp3f1bsqwpd1fwn8y6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='carbon-dioxide' name='textscan.0va9zav0oilvor17efrs70pzvbsq'>
            <connection class='textscan' directory='/Users/Tommy/DS/World climate/data' filename='carbon-dioxide.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0va9zav0oilvor17efrs70pzvbsq' name='carbon-dioxide.csv' table='[carbon-dioxide#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='Month' ordinal='1' />
            <column datatype='real' name='Decimal Date' ordinal='2' />
            <column datatype='real' name='Carbon Dioxide (ppm)' ordinal='3' />
            <column datatype='real' name='Seasonally Adjusted CO2 (ppm)' ordinal='4' />
            <column datatype='real' name='Carbon Dioxide Fit (ppm)' ordinal='5' />
            <column datatype='real' name='Seasonally Adjusted CO2 Fit (ppm)' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[carbon-dioxide.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[carbon-dioxide.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[carbon-dioxide.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Decimal Date</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Decimal Date]</local-name>
            <parent-name>[carbon-dioxide.csv]</parent-name>
            <remote-alias>Decimal Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carbon Dioxide (ppm)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Carbon Dioxide (ppm)]</local-name>
            <parent-name>[carbon-dioxide.csv]</parent-name>
            <remote-alias>Carbon Dioxide (ppm)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seasonally Adjusted CO2 (ppm)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Seasonally Adjusted CO2 (ppm)]</local-name>
            <parent-name>[carbon-dioxide.csv]</parent-name>
            <remote-alias>Seasonally Adjusted CO2 (ppm)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carbon Dioxide Fit (ppm)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Carbon Dioxide Fit (ppm)]</local-name>
            <parent-name>[carbon-dioxide.csv]</parent-name>
            <remote-alias>Carbon Dioxide Fit (ppm)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seasonally Adjusted CO2 Fit (ppm)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Seasonally Adjusted CO2 Fit (ppm)]</local-name>
            <parent-name>[carbon-dioxide.csv]</parent-name>
            <remote-alias>Seasonally Adjusted CO2 Fit (ppm)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/Tommy/Documents/My Tableau Repository/Datasources/carbon-dioxide.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/19/2020 03:45:42 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='carbon-dioxide' increment-value='%null%' refresh-type='create' rows-inserted='720' timestamp-start='2020-03-19 15:45:42.299' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>0</ordinal>
              <family>carbon-dioxide.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>1</ordinal>
              <family>carbon-dioxide.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Decimal Date</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Decimal Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Decimal Date</remote-alias>
              <ordinal>2</ordinal>
              <family>carbon-dioxide.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>720</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carbon Dioxide (ppm)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Carbon Dioxide (ppm)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carbon Dioxide (ppm)</remote-alias>
              <ordinal>3</ordinal>
              <family>carbon-dioxide.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>680</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Seasonally Adjusted CO2 (ppm)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Seasonally Adjusted CO2 (ppm)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Seasonally Adjusted CO2 (ppm)</remote-alias>
              <ordinal>4</ordinal>
              <family>carbon-dioxide.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>668</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carbon Dioxide Fit (ppm)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Carbon Dioxide Fit (ppm)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carbon Dioxide Fit (ppm)</remote-alias>
              <ordinal>5</ordinal>
              <family>carbon-dioxide.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>681</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Seasonally Adjusted CO2 Fit (ppm)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Seasonally Adjusted CO2 Fit (ppm)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Seasonally Adjusted CO2 Fit (ppm)</remote-alias>
              <ordinal>6</ordinal>
              <family>carbon-dioxide.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>708</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.445019' measure-ordering='alphabetic' measure-percentage='0.554981' show-structure='true' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bottom'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ã&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GlobalLandTemperaturesByCountry' name='federated.1b9bsu61972x6418vfov30r2xt57' />
          </datasources>
          <datasource-dependencies datasource='federated.1b9bsu61972x6418vfov30r2xt57'>
            <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[AverageTemperature]' derivation='Avg' name='[avg:AverageTemperature:qk]' pivot='key' type='quantitative' />
            <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[dt]' derivation='Year-Trunc' name='[tyr:dt:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dt]' derivation='Year' name='[yr:dt:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' included-values='in-range'>
            <min>-16.0</min>
            <max>15.0</max>
          </filter>
          <filter class='categorical' column='[federated.1b9bsu61972x6418vfov30r2xt57].[yr:dt:ok]'>
            <groupfilter function='member' level='[yr:dt:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1b9bsu61972x6418vfov30r2xt57].[yr:dt:ok]</column>
            <column>[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' field-type='quantitative' max='15.0' min='-20.242324663978497' range-type='fixed' scope='cols' type='space' />
            <format attr='height' field='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' value='43' />
            <format attr='title' class='0' field='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' scope='cols' value='Avg. Temp' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]' value='104' />
            <format attr='height' field='[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:ok]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]</rows>
        <cols>([federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:ok] * [federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk])</cols>
      </table>
      <simple-id uuid='{F1604B9D-D07B-48E3-803E-97D3A082DBCE}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global temperature distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GlobalLandTemperaturesByCountry' name='federated.1b9bsu61972x6418vfov30r2xt57' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b9bsu61972x6418vfov30r2xt57'>
            <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column-instance column='[AverageTemperature]' derivation='Median' name='[med:AverageTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[dt]' derivation='Year' name='[yr:dt:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1b9bsu61972x6418vfov30r2xt57].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1b9bsu61972x6418vfov30r2xt57].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1b9bsu61972x6418vfov30r2xt57].[yr:dt:ok]'>
            <groupfilter function='member' level='[yr:dt:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]</column>
            <column>[federated.1b9bsu61972x6418vfov30r2xt57].[yr:dt:ok]</column>
            <column>[federated.1b9bsu61972x6418vfov30r2xt57].[Latitude (generated)]</column>
            <column>[federated.1b9bsu61972x6418vfov30r2xt57].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b9bsu61972x6418vfov30r2xt57].[Longitude (generated)]' field-type='quantitative' max='33587072.079490215' min='-20453161.61706822' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b9bsu61972x6418vfov30r2xt57].[Latitude (generated)]' field-type='quantitative' max='14786348.975943718' min='-4058450.9542456041' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='10.0' field='[federated.1b9bsu61972x6418vfov30r2xt57].[med:AverageTemperature:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0008a9</color>
                <color>#1d24b1</color>
                <color>#3d43b9</color>
                <color>#6065c1</color>
                <color>#8689c9</color>
                <color>#aeafd1</color>
                <color>#d9d9d9</color>
                <color>#deb9ba</color>
                <color>#e4989a</color>
                <color>#ea7578</color>
                <color>#f05054</color>
                <color>#f6292e</color>
                <color>#fc0107</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]' />
              <color column='[federated.1b9bsu61972x6418vfov30r2xt57].[med:AverageTemperature:qk]' />
              <geometry column='[federated.1b9bsu61972x6418vfov30r2xt57].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b9bsu61972x6418vfov30r2xt57].[Latitude (generated)]</rows>
        <cols>[federated.1b9bsu61972x6418vfov30r2xt57].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D7AD1B21-0F27-4C8F-9482-DB1B294588C7}' />
    </worksheet>
    <worksheet name='Top'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='9'>Average temperature by country</run>
            <run>Ã&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GlobalLandTemperaturesByCountry' name='federated.1b9bsu61972x6418vfov30r2xt57' />
          </datasources>
          <datasource-dependencies datasource='federated.1b9bsu61972x6418vfov30r2xt57'>
            <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[AverageTemperature]' derivation='Avg' name='[avg:AverageTemperature:qk]' pivot='key' type='quantitative' />
            <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[dt]' derivation='Year-Trunc' name='[tyr:dt:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dt]' derivation='Year' name='[yr:dt:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' included-values='in-range'>
            <min>26.0</min>
            <max>31.0</max>
          </filter>
          <manual-sort column='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;CuraÃ§ao&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Federated States Of Micronesia&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Bonaire, Saint Eustatius And Saba&quot;</bucket>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
              <bucket>&quot;Palmyra Atoll&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Kingman Reef&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;Saint Vincent And The Grenadines&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Turks And Caicas Islands&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Sint Maarten&quot;</bucket>
              <bucket>&quot;Saint Martin&quot;</bucket>
              <bucket>&quot;Saint BarthÃ©lemy&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Virgin Islands&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Antigua And Barbuda&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Trinidad And Tobago&quot;</bucket>
              <bucket>&quot;CÃ´te D&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Christmas Island&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Saint Kitts And Nevis&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Sao Tome And Principe&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Baker Island&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Timor Leste&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Burma&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Congo (Democratic Republic Of The)&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Reunion&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Palestina&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Western Sahara&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Macau&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Gaza Strip&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Macedonia&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Bosnia And Herzegovina&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;France (Europe)&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Jersey&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Netherlands (Europe)&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Isle Of Man&quot;</bucket>
              <bucket>&quot;United Kingdom (Europe)&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Denmark (Europe)&quot;</bucket>
              <bucket>&quot;North Korea&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Falkland Islands (Islas Malvinas)&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Faroe Islands&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Saint Pierre And Miquelon&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Ãland&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;French Southern And Antarctic Lands&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Heard Island And Mcdonald Islands&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;South Georgia And The South Sandwich Isla&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Svalbard And Jan Mayen&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Antarctica&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1b9bsu61972x6418vfov30r2xt57].[yr:dt:ok]'>
            <groupfilter function='member' level='[yr:dt:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b9bsu61972x6418vfov30r2xt57].[yr:dt:ok]</column>
            <column>[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' field-type='quantitative' max='33.0' min='26.0' range-type='fixed' scope='cols' type='space' />
            <format attr='height' field='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' value='43' />
            <format attr='title' class='0' field='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' scope='cols' value='Avg. Temp' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]' value='100' />
            <format attr='height' field='[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:ok]' value='28' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]</rows>
        <cols>([federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:ok] * [federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk])</cols>
      </table>
      <simple-id uuid='{8548521B-6D28-4C4D-915A-1542E1C4EE9F}' />
    </worksheet>
    <worksheet name='Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World temperature trend analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GlobalLandTemperaturesByCountry' name='federated.1b9bsu61972x6418vfov30r2xt57' />
          </datasources>
          <datasource-dependencies datasource='federated.1b9bsu61972x6418vfov30r2xt57'>
            <column caption='Average Temperature' datatype='real' name='[AverageTemperature]' role='measure' type='quantitative' />
            <column-instance column='[AverageTemperature]' derivation='Avg' name='[avg:AverageTemperature:qk]' pivot='key' type='quantitative' />
            <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column-instance column='[AverageTemperature]' derivation='Avg' forecast-column-base='[avg:AverageTemperature:qk]' forecast-column-type='forecast-value' name='[fVal:avg:AverageTemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[dt]' derivation='Year-Trunc' name='[tyr:dt:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:qk]' included-values='in-range-or-null'>
            <min>#1867-02-06 00:00:00#</min>
            <max>#2013-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1b9bsu61972x6418vfov30r2xt57].[fVal:avg:AverageTemperature:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:qk]' value='Year range'>
              <formatted-text>
                <run>Year range</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b9bsu61972x6418vfov30r2xt57].[fVal:avg:AverageTemperature:qk]</rows>
        <cols>[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{5F13AFEA-99D1-4EA4-A974-AC31274EBC80}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource caption='GlobalLandTemperaturesByCountry' name='federated.1b9bsu61972x6418vfov30r2xt57' />
      </datasources>
      <datasource-dependencies datasource='federated.1b9bsu61972x6418vfov30r2xt57'>
        <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
        <column-instance column='[dt]' derivation='Year-Trunc' name='[tyr:dt:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='49001' id='7' param='horz' type='layout-flow' w='46398' x='800' y='49999'>
            <zone h='49001' id='5' type='layout-basic' w='46398' x='800' y='49999'>
              <zone h='49001' id='13' name='Top' w='22696' x='800' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49001' id='14' name='Bottom' w='23702' x='23496' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='48999' id='3' name='Map' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='42249' id='10' name='Trend' w='52002' x='47198' y='49999'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6752' id='12' name='Trend' pane-specification-id='0' param='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Forecast Indicator:nk]' type='color' w='25099' x='74101' y='92248'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone friendly-name='Year range' h='6752' id='11' name='Trend' param='[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='26903' x='47198' y='92248'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='32' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='48999' id='3' is-fixed='true' name='Map' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49001' id='13' is-fixed='true' name='Top' w='22696' x='800' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49001' id='14' is-fixed='true' name='Bottom' w='23702' x='23496' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone friendly-name='Year range' h='6752' id='11' name='Trend' param='[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='26903' x='47198' y='92248'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42249' id='10' is-fixed='true' name='Trend' w='52002' x='47198' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6752' id='12' name='Trend' pane-specification-id='0' param='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Forecast Indicator:nk]' type='color' w='25099' x='74101' y='92248'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3C3A89AB-4706-4C85-8162-E1B573BDD775}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1b9bsu61972x6418vfov30r2xt57].[med:AverageTemperature:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b9bsu61972x6418vfov30r2xt57].[med:AverageTemperature:qk]</field>
            <field>[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]</field>
            <field>[federated.1b9bsu61972x6418vfov30r2xt57].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90620B0D-1EB4-4DA8-BD1A-6DCFFE9D86AC}' />
    </window>
    <window class='worksheet' name='Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1b9bsu61972x6418vfov30r2xt57].[none:Forecast Indicator:nk]</field>
            <field>[federated.1b9bsu61972x6418vfov30r2xt57].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AE29AB1-3D23-41B0-BCAE-6BB73CC9E77C}' />
    </window>
    <window class='worksheet' name='Top'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:ok]</field>
                    <field>[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1b9bsu61972x6418vfov30r2xt57].[avg:AverageTemperature:qk]</field>
                  <field>[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]</field>
                  <field>[federated.1b9bsu61972x6418vfov30r2xt57].[tyr:dt:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>30.744749999999996</value>
                <value>&quot;Djibouti&quot;</value>
                <value>#2013-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]</field>
            <field>[federated.1b9bsu61972x6418vfov30r2xt57].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{863AE25C-4C5C-469B-9D26-63FE660E191B}' />
    </window>
    <window class='worksheet' name='Bottom'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b9bsu61972x6418vfov30r2xt57].[none:Country:nk]</field>
            <field>[federated.1b9bsu61972x6418vfov30r2xt57].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2F6551B-E14A-490E-B5C0-CBA20106395A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Bottom' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Top' />
        <viewpoint name='Trend'>
          <zoom type='entire-view' />
          <highlight field='[federated.1b9bsu61972x6418vfov30r2xt57].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{EAE4F607-564F-4E0F-B35A-2D562551CD85}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bottom' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top' width='192'>
      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
      icXy/wOlTxKDXt/ubQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trend' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAfSklEQVR4nO2dd5BcyX3fP+9Nnp20OzubgI0IiwwcDodDOPICj+TxjhQtizyKkkyKZFks
      hyoWVZbssi0Xy3a5aDkUbbNMyyoWg0lKJYqURFLkJfIOR9wdDsAesMAiA5uxaXZyTq/9xwAD
      LGZ2MRsGO4Ppzz/AvtDTb6a/r7t//fv9WhFCCCSSOkVdi0KkhiS1ypoIQNO0tShGInngrIkA
      JJJaRQpAUtdIAUjqGikASV0jBSCpa6QAJHWNFICkrpECkNQ1UgCSukYKQFLXlCUAIQTxeBxN
      00gkEgBkMhnS6XRFKyeRVBp9ORclk0nOnj1LIpHAYrGwb98+hoaGUBSFAwcOANIhTlKblCUA
      TdNIp9N4PB6EEMRiMfT6/K1CCIQQ0iFOUpMo5cQDpNNpZmdnaWpqIhwO43Q6yWazCCFwOp3k
      cjl0Ot2DqK9EsqaUJYD7IQUgqVWkFUhS10gBSOoaKQBJXSMFIKlrpAAkdY0UgKSukQKQ1DVS
      AJK6RgpAUtdIAUjqGikASV0jBSCpa6QAJHWNFICkrpECkNQ1UgCSuqYsAWQyGQYGBrh58yan
      Tp0il8tx5coVJicnK10/iaSilBUTrNfrMZvNpFIpfD4f0WgUTdOYn5+no6MDTdNkULykJilL
      AKlUimg0itPppLW1lXQ6jcFgAEBVVYQQMiRSUpPImGBJXSMnwZK6RgpAUtdIAUjqGikASV0j
      BSCpa6QAJHWNFICkrpECkNQ1UgCSukYKQFLXSAFI6hopAEldIwUgqWukACR1jRSApK6RApDU
      NWUL4PZ2qLlcrvC33BpVUk0IIfjhGxdJZbJl31N2UPwbb7zBxYsXefvtt0kmk5w+fZqBgYEV
      V1YiWWtiiQw/OX6FGX+s7HvKDor3eDy0trZy/fp1kskker0eRVHQNE0GxUuqgmODI2ztbGJ0
      2s8Gd0NZ95QlgHQ6jV6vJ5PJsHfvXlRVpbOzE5BB8ZLVM+OP4g8n2NHjWXEZmiY4dXmaFw5t
      4eqkD72+rKZdngBMJhPbtm1bceUkkqV47fQwJy5M8t/++YcwGcpruPcyOhOk2WllW3czr54e
      Lvs+aQWSrCuaEFwYmeO5xzfz9+9cW3E5r56+wTP7e7GaDCTTazwJlkgqxU1vmDa3nQ8f3MTJ
      SzcJx1JF11wen1+yjEQqw/hsmO3dzeh0Kg0WA6FosqzPlwKQLItsVuN//PW7ZLK5NSlv4Mo0
      B7d1YNDr+O1ndvHtX5xdYFDJaRpf+dYbXJ3wLbjPF4ozNDwHwMlLUzy2rQNFUQBoa7Iz5Yvc
      97PHZkNSAJLlEYonOX5ufNG38slLN/n14FjZ5Z25PsO+LW0A7N3citVs4I2zo4Xz1yb99La5
      eOXUjcKx0ekg/+Uv3+avj13k1KWbHDs7ypP7ugvn+9pdjE4Hl/zcoZE5/vX//aUUgGR5zPlj
      7Opr4e2h0omRL4/N84PXzpNMFY/Dc5rG1354gnQm33t4gzEMOhWzMT/xVRSFz3x4L78cGGEu
      kLflDw3P8Q/et41Zf5RkKsvodJA//9kAf/jiYf7400f5u7eu0GAx0mi3FD6nq9XJ6Exo0WcY
      ng7wV7+6wOee3ycFIFkeE94wR3d3MukNE09lis7PBWM8saeLl05eLzoXCCc5cXGSN2/1EH97
      /ArPHdxcGLoAGA06Xnx6Jz99+wpCCC6MetnV18KhnZ28dPI63/jJab70iUO0NDZgNRv4N//o
      fXz++X0LPqe1ycbN+XDRMC2b0/jxm5f43svn+NInH2dXT4sUgGR5jM2E6GtvZFdvC4PXZ4rO
      x5MZPnakn9NXprg26SN9VyOcnA/zwQObOHZ2lBlflBlfhP1b24vK2LOplasTfqKJNJoQWE0G
      3re3ix+/eYnPf2QfLY13FrksJsOCtz+A2ajnqX09/Kf/92sCkUTh+Fvnx4km0vzbz7wft8OK
      y26WApAsD184TrPTyvv2dPGjY5f42g9P8M7QBJAf4uQ0gd1q5Asv7OdX743yR//71cJwZnw2
      xK5eD9t7PHz1B8f5zfdvR1WVkp/z9CM9fOsXZ9nc0YiiKDisJr75L3+D/q7msur57IE+PvXM
      Lv7sJwOFSfXQiJdnH+0rfKbZqJcCeJgRQjA0MkckXmxaXAm5nEY8mcFmMdLRbOdPPvN+Pv7E
      Nl6/NWmNxtM0mA0oikJvu4sv/sajfPjgJi6MeoH8YlVXq4sXDm3hQH/Hkiu/T+7r5sSFSXb2
      thSOGfTL8zbY1t2MqioEIkmyWY3ZQJS2JtuCa6QAHlKEEFwc9fK1H57g2NnyrTJLEYmnsVmM
      hTeo02amt91FOpMjk80RjCZx2kwL7tnZ4ylYjAKRJE0OM06bmd/70B5UpfTbH/JDmy+/eGhV
      7hEAe/paGbgyxZQvgtthLepxpAAeUqbmI3zv1fN85XNPceZa8Vh9JcwEorTe8wYFsFmMBCJJ
      5oIxPK6FTmgbPY68BSedRQiBcRlv8ce2bShYiFbKo/3tvHdthsEbs+zZ1Fp0XgrgIeWlk9f5
      nWd3s6HZTk7TiCXTKy7r9hh60hums8VRdL67zcWkN8ysP1Y0xNDpVOxWI9cmfXhcDQssPg8C
      t9NKKp3lzNVpdnQXzx+kAB5ChBCMTAfZ3t2Moijs6PFweWxpdwLIT2KzuYVBTplsjm/87Wle
      PnmdsZkQGz3FAuhrdzE6E2TGX7qH2N7t4eWTN0reW2lURWFXXwtzwVjJupUUQCgUYmJiQvr4
      1yiBSBKH1YRel/95921u4+SlqSXvEULwl78c4n/96N0Fx77/6nna3TZm/DF+fW5sgQnyNhs8
      DsZmgvjDCdwOS9H5nT0eTlycpKfdtconWxmHdmzkY0f6S54rOcAaGBjg0qVLfPGLXyzbr1pS
      PZy7McuuvjvWk76ORr736jmEEIsOQUZnggxPB9EpCtO+KG1NDbxxdpREKstnPrwXVVX42JGt
      uGzmonvdDgvBaApFyU9e76Wj2Y7dYqJzHXqA25/f0Wwvea5kD9DY2MiLL74og1xqECEE5+6Z
      8Ol1Ko02CzP+aNG1c4EYozNBvvPSIL//3F5eOLKVX7x7jbHZEMfOjvH5F/YVLCdNJd7ukDdP
      6nUqsUQak6G4zRj0Ov7wU4dLime9KSmAbDbLK6+8UhgCZTIZBgcH8Xq9DAwMkM1muXHjhtwo
      ewVcGvMy6Q1XbHgpBEz7o0Xj7Q0ee5EAZvxRvvr947xy6gYfeXwLnS1OdvV4GJ4K8Gc/GeAP
      PvZo2QEqbU0NNC4iEIDdfS2LLnqtJyWfzu12oygKuVwOVVXR6/XodDrm5+eZmppix44dxONx
      EomE3Ch7GXiDcb778iBmo57WRhuf/8jeJRtFThMoCkvay+9l4Oo07U02stmFzmgdbhsTsyF2
      996xqx8/N87Hn9jK0V358Nbb93ziye2kMllaXJaichaju9WJolD29dVCkQCEEEQiEfr770wa
      UqkUoVAIl8tFa2srPp8Pi8VCIpGQMcGLMDQ8x7nhWX7n2d1APmb1u6+c57Mf3kd/l5uv/80p
      xucibN7YtGgZ3/37M/S0u3hmf+99Py+eyvDNn51BE4LPPre3aO62wePg8vidWFlNy68S/9Gh
      o0XX7ttS7J9zPw7t7GT3praamzOWFMD4+DiKorB//34AzGYzR48efeCVq2XeODvK5bF5nj+0
      BZfNzImLk4WYVchbJs5en2HzxiaEECTT2QUTyJveMCcv30Snu//bP5fT+PqPT/LE7i6O3Hqb
      30trk42p+TtBIjP+KFazEZvFuMonzeNoMOFoMN3/wiqjaA6gqioOh4ORkZGa686qhUQqw4w/
      ym89uZ1XT93AH07wixPX+NQzOwvXbOtyc2XChxCCsZkQf/LN19G0/DBSCMH3XzvPF154hPlQ
      fMnPEkLwo2OX6GtvXLTxA5j0OjJ32fjfuTDJ4Z0bV/mktU/JSbDL5eITn/hEzXVn1cLQyBzb
      upo5uruLwRuzfOPvTvPpZ3cveNvarSY0TRBNpHn51A3C8VTBv/7GVACTQc/+re34w8lF51eB
      SIL/+aOTRJNp/uGT25esk06nYjLoiKcyaJpg8MZMSVfkeqOkAIQQvPvuu3Jiu0JOXJjkyK5O
      jAYdT+3rob/TXdKpa2evh3cuTDLrj3J4ZycTc/koprPXZji8cyM6VUVVFXLawt9BCMHAlSm+
      +oO3+MD+Xj73kX1lTZSbnVbmAjHmQ3GsJsOaDX9qmZKv+EAgwNTUFJqmoaq14y0xPhuis8Xx
      wP1N7iaezOCPJOlpy696Pnugb9Fr9/S18pVvv8EffOxRDHqV65N+tnd7uDbp54OP5e+zmgwk
      Uhns1vz4WgjBj9+8zOhMgH/32ffTYC6/Ebe786bQUDTJwe0bVvGUDw8lW3dTUxPd3d01ZdkR
      QvCnf/EW2jr3WscGRznQ31GWzbu3w8Wj/R0c3L6B3vZGhqeDZLI5kulsocG3NjUwe1euy5fe
      vY4vHOfLnzy8rMYPsNFjZ3IuzMDVafaW8IysR0oKIJFIkMlkuHHjRqnTVUk0kc5PGNex/SfT
      Wd4emuSpR3rKul6nqnz5k4cwG/V4XFb84QQj00F62pyFIU1bk43pWwtYZ65NM3hjNj/kWcGi
      Urvbzo0pP9mshttpXfb9DyOLzgFaWlro61u8+642ZgMxEqls0Xj5QfL6mVEO79xIg7nYH+Z+
      6NT8JPX05Sl23BUF1dLYwOwtAfz4zcv8s998bNmRUbdxOy2cH55b4CdU75QUQDgcLuwDUCvc
      jjtdTm74tUAIwbGzo/z5T9/j7fPjPF3m278U3W0uXhsYpr/TXTjW4mrAG4zhDyewW1Zntzfo
      dLgdVvZtbltxGQ8bJQXQ2tpKOBx+0HVZFTP+KI4G07LyQq4EIQShWLJgs5/0hnlraIIPPNrL
      v/rdJ0p6Q5bLlo1N2CxGHNY7C0oelxVvKM7A1Sn2bGpd1QRfVRX+xW8fLkzQJYsIIBAIMD4+
      XlM7wEz7onS3OisqgGA0yf/5yQD/4Ttv8qv3RgD45cAIHz28lb6ORhpWaVbc1tXMbz25MFOC
      xWQgk9U4e22WR/tXb7fvbHFWpVPaelEkgGAwyIYNG3juuedqygrkDcboanWSKJGRbC0QQvCd
      lwZ5bFsH//4LT/P6mVFmAzFGpoPs6F5d4PZtHA0mntzXU3RcAbyhmJy4VoCidYBkMsnIyAgt
      LbU1UcppArvFuKY9gBCCnCbyvu7JDN5gjP1b21EVhY8e2cJ//O6bfPBAH3p9ZddK3E4LzU7r
      srxCJeVR9Mu1trayY8cOGhrK22KmGognM5iNOqxm45r2AFfGfXz1+8fJZHOcvHSTx7ZtKDTC
      g9s3cGjHBp4q8cZea57Y3cXTj9zfI1SyfIoEoCgKU1NTHDt2rGbmAHOBGC2NNqzm/KrpWjHp
      DROOp/j5ieu8MzSxwMKjU1V+94N7HogH5KP9HYuG9ElWR8m+W1VVWlpauHTp0oOuz4qY8Udp
      cTVgMelLJmxdKfOhOJ96eidvD01gNhlq0t1XsjQlfYEsFgsWiwWbrTiNRDUy5Yuw0eNAVRS8
      6fK3yLwf/kiCtiYb//ij+/MzUclDR8keYH5+nmvXrrFxY95fXNM0xsbGiEQiXLx4EU3TmJqa
      Ympq6VQbD4q5QD4hk8WkJ7GGk+BwLIWjwcTmjU1s3rB45JakdinZA7S2ttLc3FzwBBVC4PV6
      icfjXLt2jb6+PrzefMLTtra2dY8JnvZFcDvMJFJpEqnMkoE8mWwOvU7H/QwqQuT9i0wGVQYG
      PcSUFEA8HicQCLBzZz6CKZPJEA6HURSF5uZmZmdnC64S6x0TrGmCTE7DYjLSYDGRzuSWDOT5
      3qtDbO9u5vEdS0dDpTM5VFXBaFj5yq6k+inZUqLRKBMTE+Ry+cZkNpt55plnEEIghEBVVbq6
      uh50XUvijyRovpX112JceggkhOC9q9Nkc1qRADRNLFghTWdymFe4Z62kdig5B7DZbHR1dRW9
      1RVFKQyLFEVZ18CT24xOBwsp9wx6HZnM4k58wWgSj6uBibmFfk45TeNP/+KtBSbUcDyFswoT
      OUnWlpICcDqd+P3+mvAIHZkO0NXiBMBqNhBfYiHswoiXA/3taEIsSAIbTaQ5dXmKk5duFo55
      Q/mdUCQPN0UCSKVSeL1eTCZTTYRDjs2G6L3VA+h1KrklJuSDN2bY2dtCV4uD4alA4fhNb4Qn
      93bz1vmJwjFfKE6zc/FMZ5KHg6IWns1mSaVSZLPZqhji3I9QLFVWzklNy6cf2djiYGunmxt3
      CWB0JsgjW9tQ1XxiWMgvgjU5ZA/wsFMkgIaGBp566imef/759ajPsogm0hj1uiL33lLv/2lf
      hDa3DVVR2Nrp5vrknZ3HJ+fCdLY4eXp/L8fPjwPgDycWTQYreXgoOcbx+/0MDQ0Rjy+dlGm9
      uTkfKcoCoShKkQKEEBwbHCskjmpxNTB7K4JMCMGUL0K728a+za2cuTZNOpMjEk/jtErXh4ed
      kgI4c+YMw8PDDA4OPuj6LIuxmWBh/H8bBRD3KGAuEOPS2DwHt+VTgaiqgsmgJxRLks1ppDM5
      TAZ9PhnVlnaOnx8nHE9ht8q8OQ87i4ZEdnR0FHKDViujM0F62xsXHLs3kZQQgm+/NFjY5AHy
      vcTB7R0cPzdOIJLEc9euJx86uIlXTuWzYeh01W8EkKyOkis9ZrOZSCRS9akRZ/2xIlOl2agn
      lc6SzuT4z98/jqIqbOtsZss9WZjfv7ebr3zrGE12C113bfzmsJrY3dfKlYn776klqX2KWng8
      Hmdqaop4PF71ZtBMLofxnh1JTEY9yXQWXyjBpg1N/N6H9qArEQNrMRk4tHMjP/jlEL//3N4F
      5z56ZAu9IzJwvB4oauE6nQ6DwYChyn1gNE2AoKhxW24JwBvKe4jqdeqi5twPPdZHNJ4u2k3F
      2WBeMtOy5OGhqAcwmUwcPny46hPjRuIpbFZjUeO2mAwkUllm/TH6OhoXuTtPg9nIf/2nH5Tm
      zjpm0TFOtfj6LIZvkS05TUZdvgcIxkpu6Xkvbqe1qp9TUlmqe5C/BIut1N6eBM8GYnhcciVX
      sjQ1K4C5QIzWEm/42y7R2ZyGcYU5NCX1Q80KwBeOlxwCWUwGoon0OtRIUouULYBqmxTP+kuP
      8c1GPXOBGI02sxzbS+5LWQLIZDIcO3aMQCDAz3/+c5LJJMePH2d0dLTC1VucWDJTcoMIi0nP
      6ExwwequRLIYZS316vV6mpubcTgctLW1oaoq3d3djIyM0NXVtS5B8dlcDgWNbHbh5+p1ChNz
      IQ5u65DB7JL7UpYA0uk0Op2OcDhMf39/YYPs/v7+dQmKz6dCLL1YZ7OY8IUStLntVe/KIVl/
      ymohJpOJ7dsXbsPpdDorUqFyCEaTNNlLB8GYjHpQKGsNQCKpSSuQLxxfNFW4yaBDURQ8Mp5X
      UgY1KQBvML7oIpfFaKDJbsFgkGsAkvtTcwK4NunjtdPD7OgpvX+B0aDjid2dMpWnpCwUsQbm
      m1wu90AmwacuT/Hyyev8k48fWHK3FCGEXAOQlEXNmEmyOY2fvX2VP/70kfvuxSUbv6RcamYI
      9M6FCfZsaln1RnQSyd3UhACyOY3XTo/w3MHN610VyUNGTQhgZDpAT7tLvv0la05NCMC/SPCL
      RLJaakIAoVgKZ4PM1CxZe2pCAMFoEqdNZmmTrD01IYBwPIVDpimUVICaEEAoKjerkFSGmhBA
      MpXBYqqZNTtJDVETAshqAn2VZ6mT1CZV36rEre2M9DJRraQClNWqstks586dIxAIcPr0aZLJ
      JMPDwwwPD69JJYQQvHV+nEy2eE+ydDaHQacWbYIhkawFZQ2sdTodqqricuUTxppMJmKx/AYT
      mqatOiZ4dCbEf/+rE3z9S88V+flHYkksJr2M75VUhLIEkEqlCIVC+P1+PB4PPp+vkDpxtTHB
      mhD8za8vs29zG8FYivbmhYlqkxkNm8Uo43slFaGsVmU2mzl69CgAbrcbgObm5jWpwNDwHDaL
      id19LuZDiaLzkXgKa4n0JxLJWrDuM0u9TuVTz+zE7bQwH4wVnQ/HUjQuEgAvkayWdRfAjh4P
      TQ4LbocVf6S4B8j7AclVYEllWHcB3MbZYCIYTRUdD0WT2KQbhKRCVI0AGizGkkltQ/EULukI
      J6kQVSMAs1FPNqeRzWkLjoejKZxWOQeQVIaqEQDc2twis9Den0hnsZilCVRSGapKABaTnlgi
      s+BYJpuTbhCSilFVLcvjLLYEST8gSSWpqpbldlrxBuOFv2+//XXSE1RSIaqqZTU5LPjCdwQQ
      TaSxmKp7v2JJbVNVAvA4rfjDd4ZAiVSWBrMUgKRyVJUAHA0mQncthkUTaexW6QckqRxVJQC7
      1UQkfkcAwWgSh0yHIqkgVSUAs1FPVtPI3VoMi8RTOGQPIKkgVSUAAKNeR/pWZFgolsIls0FI
      KkjVCcBs1JNM51eDQ9EkdukIJ6kgZQlACEEikUDTNPx+f+Hv22GRa4nLZiYYTQL5hFgyI5yk
      kpTlZJPNZjl58iQtLS3Mz89z5MgRTp06RVdXF1arFSEEmqbdv6AycDaY8IUTdLc6iSUyWE2G
      NStbIrmXsnoARVEwGo2k02lUVWVqaoru7m7GxsbWvEJupxX/rcWwbE5DL7NBSCpI2W6Wmzdv
      xmazEY1GsdvtpNNp3G73guD4taDJbuHapA9VVcnmNIwG/ZqVLZHcS1kC0Ov1eDweACyWfJ5+
      s7ky1plGh5lAJEkmm0NVFXTSEU5SQaquddksJsLxFIlUVvoBSSpO9QnAbCCezBBLpqUfkKTi
      VJ0ATLdCI0PRlPQDklScqhMA5Hd7nw/H5SKYpOJUpwD0OuYCMZkPSFJxqlIATpuZsZmg9AOS
      VJyqFIDbYWFsNiSHQJKKU5UCcNnNTMyFpR+QpOJUpQAabWaEEFjlOoCkwlSlANxOKw1mIwb9
      yvYckEjKpSoFYLMYcdpMGPRVWT3JQ0RVtjC7xUhvu0vmA5JUHEWsZnOvW+RyuRVvkbR4mZp0
      hJNUnKptYbLxSx4EspVJ6hopAEldU5YAMpkMp06dYn5+nsHBQTRN4+LFi1y8eLHS9ZNIKkrZ
      EWFWq5Xx8XESiQTxeLywcfVabJQtkawXZW+UHY/HaW9vZ3p6mkgkgtWa39F9tRtlSyTrSdWa
      QSWSB8GabL41HU1wYmKOmH+ehqbmkv8aLQ1wW2uKQjoRK3ltaGoSZ8fGBcd1egNGi5V0Io7R
      2kAiHFz0c0qX5QNEWffE/PNY7E7SiTgGi5VMMkEqEi6q0/3+NZgtKIqK0DRUnY5UPLro8937
      r06nx9hgIxWLYrbZiYcC9/+uGpuJB3xYXU3EQwGE0Mquq8lqIx2PYbLZyaZTZNOpZT2nqurQ
      cllUnZ5MMo7eaCadjJddhqrqMNudJMNBzE4X8aB/8e+q0U08GMDidJEIBYue8zb3Pl8qHsVs
      cxQ935r0AFfnQ/z0ysRqiwEgMj+HvbmlqsqqxjqtZVnZdIpMMoHF4Vp1WclIGJ3BiGENsoY8
      iOerCgHcrsLtt2XhmBAoy3SHKJQlBAqAcuv/ioqiLC/J1u06FMpTVYTQUNXlDfcWPJ+qogkt
      3zustiyd7o7xYVXfVb4+CIGAQq6n5ZaV/54VhKatyXd19/Ospqy7vxtNyy1oC1Wx/+j1t17H
      3dXLxOBp2rbtwjt8DbunlVwmTe/BJ8r+MdLxGONnT2MwmYgFfIVhCIqCxeliw869ZdcpPDtF
      xDtLPBhAaDkUnR5V1ZHLZmjZ1I+rY2PZZY2cfIumzh68I1fR6Y3k0ikUVYeiKvQePIqqK/9n
      uPz6SzRu7CI676Wpq5eodxYUhVwmQ+9jR8ou5/Z3ZbbZSUbDNG7owjt8FYPZisXhpGMZ35V/
      YpR0PEbUN4fRagMhiAV86A1GOnbuXTA0uR+T597D4nQRmBzD2b6BicHTbNy9n9DMFJuPPFn2
      d5UIh5i5PISiKgghSMfjNPduJjA5hq25hbatO4AqWAgTQuDq6CSTSmJxNWEwW3C2daAzGDBa
      G5ZlXjVYrFhdjQhNQ280oagqiqpgstkQWm5Z9bI1t6AzGFFUFZ3BiMXuJOKdwdHaTiaVuH8B
      d+Hq6MRgsaDTG4j6vDjaOkjFo1gcrmXlPb39Xdk9bcSDfsx2B3qTGVVVMZiWFzx0+7uyt7QR
      882TikXxbOrHbHcsOxero7UdRdXR0OS5VS8n6VgMR1sHmVTq/gXcReOGTgwmMzqDgdmrl1BU
      HdH5OWzuZrRc+b+h2e7AZLNja24h5punuWcT8yPXsbqayGXShevWvwe41XWabQ5oA5vbg93T
      SjadJhWLLCstYjoeQ9XraezsIZdJozMaURSVXCaN1dm4rGrFA35UnR5P31YURSEVj7L92RcI
      z9zE3dm7rLK0bIZMMoHN7aFr30ECk2NsOvwk8YAPnb78oB8h8sOeTCJOx/Y9iJyGTq/H2dZB
      Lpu9fwF3kY7H0OnzP3/3o48DCrlsBmtj04q+K51ej95kovuRx4l4Z9jy/g8Qm/fiaG1fXr0S
      cRRFxdropufRw2RSSXR6PcHpm+iN5Ys8GQmj0xtQ9QZ6Dhwmk0ywcfd+ktEwdk9r4bqqmANI
      JOvFug+BJJL1RApAUtes/xxAIlkhvrFhbl4YpHFDFyigN5oQmoYQGht27iurDNkDSGqWpq5e
      VFUlOj+Hb2yY0PRNrr75at6gUib/H/iPMjhEROisAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
